#include <Wire.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>

// OLED Setup (128x64)
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire);

// IR Sensors
#define IR_LEFT 32
#define IR_RIGHT 33

// Ultrasonic
#define TRIG_PIN 12
#define ECHO_PIN 13

// Motor Pins (L298N)
#define MOTOR_A_IN1 25
#define MOTOR_A_IN2 26
#define MOTOR_B_IN1 27
#define MOTOR_B_IN2 14

// Motor Speed (PWM)
#define SPEED 150

void setup() {
  Serial.begin(115200);
  
  // Initialize OLED
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("OLED failed!");
    while(1);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  
  // Sensor Setup
  pinMode(IR_LEFT, INPUT);
  pinMode(IR_RIGHT, INPUT);
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  
  // Motor Setup
  pinMode(MOTOR_A_IN1, OUTPUT);
  pinMode(MOTOR_A_IN2, OUTPUT);
  pinMode(MOTOR_B_IN1, OUTPUT);
  pinMode(MOTOR_B_IN2, OUTPUT);
}

void loop() {
  // Read Sensors
  bool leftIR = !digitalRead(IR_LEFT);
  bool rightIR = !digitalRead(IR_RIGHT);
  float distance = readDistance();

  // Clear and Prepare Display
  display.clearDisplay();
  
  // Show Sensor Status (Top Section)
  display.setCursor(0, 0);
  display.print("L:"); display.print(leftIR);
  display.print(" R:"); display.println(rightIR);
  display.print("Dist:"); display.print(distance); display.println("cm");
  
  // Obstacle Detection (Priority)
  if(distance < 10.0) {
    stopMotors();
    display.drawTriangle(64,40, 54,60, 74,60, WHITE); // Stop Symbol
    display.setCursor(30, 45);
    display.println("STOPPED!");
    display.display();
    delay(500);
    return;
  }

  // Movement Decision + Visual Indicators
  if(leftIR && !rightIR) {
    turnLeft();
    // Left Arrow
    display.fillTriangle(30,40, 50,30, 50,50, WHITE);
    display.setCursor(60, 40);
    display.println("LEFT");
  } 
  else if(rightIR && !leftIR) {
    turnRight();
    // Right Arrow
    display.fillTriangle(90,40, 70,30, 70,50, WHITE);
    display.setCursor(20, 40);
    display.println("RIGHT");
  } 
  else if(!leftIR && !rightIR) {
    moveForward();
    // Up Arrow
    display.fillTriangle(64,30, 54,50, 74,50, WHITE);
    display.setCursor(50, 20);
    display.println("FORWARD");
  } 
  else {
    stopMotors();
    display.setCursor(50, 40);
    display.println("IDLE");
  }
  
  display.display();
  delay(10);
}

// --- Helper Functions ---
float readDistance() {
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);
  return pulseIn(ECHO_PIN, HIGH) * 0.034 / 2;
}

void moveForward() {
  digitalWrite(MOTOR_A_IN1, HIGH);
  digitalWrite(MOTOR_A_IN2, LOW);
  digitalWrite(MOTOR_B_IN1, HIGH);
  digitalWrite(MOTOR_B_IN2, LOW);
  analogWrite(MOTOR_A_IN1, SPEED);
  analogWrite(MOTOR_B_IN1, SPEED);
}

void turnLeft() {
  digitalWrite(MOTOR_A_IN1, LOW);
  digitalWrite(MOTOR_A_IN2, HIGH);
  digitalWrite(MOTOR_B_IN1, HIGH);
  digitalWrite(MOTOR_B_IN2, LOW);
  analogWrite(MOTOR_A_IN2, SPEED);
  analogWrite(MOTOR_B_IN1, SPEED);
}

void turnRight() {
  digitalWrite(MOTOR_A_IN1, HIGH);
  digitalWrite(MOTOR_A_IN2, LOW);
  digitalWrite(MOTOR_B_IN1, LOW);
  digitalWrite(MOTOR_B_IN2, HIGH);
  analogWrite(MOTOR_A_IN1, SPEED);
  analogWrite(MOTOR_B_IN2, SPEED);
}

void stopMotors() {
  digitalWrite(MOTOR_A_IN1, LOW);
  digitalWrite(MOTOR_A_IN2, LOW);
  digitalWrite(MOTOR_B_IN1, LOW);
  digitalWrite(MOTOR_B_IN2, LOW);
}
